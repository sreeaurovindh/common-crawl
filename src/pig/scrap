B = GROUP UrlXpathsCount by url;
computeMidRange  = foreach byUrl  generate group as mid_url,((DOUBLE) MAX(UrlXpathsCount.urlpath_count) +(DOUBLE)MIN(UrlXpathsCount.urlpath_count))/2 as midRange;
D = foreach C generate url, ((double)max_count + (double)min_count)/2 as val;










maxSimilarity

({(a,d|e,2,d|e|g,1,0.6666666666666666)})
({(a,d|e,2,d|e|k,1,0.6666666666666666)})
({(b,d|e,4,d,1,0.5)})
({(b,d|e,4,d|e|f,1,0.6666666666666666)})



groupby Output:
((a,d|e|g),{(a,d|e,2,d|e|g,1,0.6666666666666666),(a,e|f|g,2,d|e|g,1,0.5)})
((a,d|e|k),{(a,d|e,2,d|e|k,1,0.6666666666666666)})
((b,d),{(b,d|e,4,d,1,0.5)})
((b,d|e|f),{(b,d|e,4,d|e|f,1,0.6666666666666666)})


templateOut:
(a,d|e,2)
(a,e|f|g,2)
(b,d|e,4)

Left outer Join output:
(a,d|e,2,a,d|e,2,2)
(a,e|f|g,2,,,,)
(b,d|e,4,b,d|e,4,2)


Final Output:









